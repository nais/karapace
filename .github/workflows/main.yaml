name: Create docker image
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  push:
env:
  BASE_IMAGE: "ghcr.io/${{ github.repository }}"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # ratchet:docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # ratchet:docker/setup-buildx-action@v2
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # ratchet:docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: metadata
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96 # ratchet:docker/metadata-action@v4
        with:
          images: ${{ env.BASE_IMAGE }}
          tags: |
            type=raw,value={{date 'YYYYMMDDhhmmss'}}-{{sha}}
            type=raw,value=latest
      - name: Build and push
        id: build-push
        uses: docker/build-push-action@1104d471370f9806843c095c1db02b5a90c5f8b6 # ratchet:docker/build-push-action@v3
        with:
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Install cosign
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: sigstore/cosign-installer@00bf1366a3f8c043c1f6f802441642bced142f5c # ratchet:sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.0.0'
      - name: Sign the container image
        if: ${{ github.ref == 'refs/heads/main' }}
        run: cosign sign --yes ${{ env.BASE_IMAGE }}@${{ steps.build-push.outputs.digest }}
      - name: Create SBOM
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: aquasecurity/trivy-action@1f0aa582c8c8f5f7639610d6d38baddfea4fdcee # ratchet:aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          format: 'cyclonedx'
          output: 'cyclone.sbom.json'
          image-ref: ${{ env.BASE_IMAGE }}@${{ steps.build-push.outputs.digest }}
      - name: Attest
        if: ${{ github.ref == 'refs/heads/main' }}
        run: cosign attest --yes --predicate cyclone.sbom.json --type cyclonedx ${{ env.BASE_IMAGE }}@${{ steps.build-push.outputs.digest }}
    outputs:
      image: "${{ fromJSON(steps.metadata.outputs.json).tags[0] }}"
  deploy:
    name: "deploy for testing"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: "actions/checkout@dc323e67f16fb5f7663d20ff7941f27f5809e9b6" # ratchet:actions/checkout@v2
      - uses: nais/deploy/actions/deploy@fff9ae049178e5d3dca5c9600cf78acce63c0708 # ratchet:nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/nais.yaml
          VAR: image=${{ needs.build.outputs.image }}
